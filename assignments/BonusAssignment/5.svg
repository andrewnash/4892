<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">


<!-- Page 5 -->
<svg x="0" y="0" width="935" height="1210" viewBox="0 0 935 1210" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"
style="display: block;margin-left: auto;margin-right: auto;">
<defs>

<style type="text/css"><![CDATA[
text { white-space: pre; }
path, image { pointer-events: none; }

.s1_5{
font-size: 16.87px;
font-family: Calibri_9z;
fill: #000000;
}
.s2_5{
font-size: 16.87px;
font-family: Montserrat-Bold_22;
fill: #000000;
}
.s3_5{
font-size: 16.87px;
font-family: Montserrat-Regular_a1;
fill: #000000;
}
.s4_5{
font-size: 13.75px;
font-family: Montserrat-Bold_22;
fill: #000000;
}
.s5_5{
font-size: 13.75px;
font-family: Montserrat-Regular_a1;
fill: #000000;
}

.g0_5{
fill: #FFFFFF;
}

]]></style>

</defs>
<path d="M0,0
L0,1210
L935,1210
L935,0 Z " 
fill="#FFFFFF" stroke="none" />
<text x="463" y="1130" dx="0,-0.1" class="s1_5">3 </text>
<text x="109" y="126" dx="0,-0.1,0,0.1,0.1,0,-0.2,0.1" class="s2_5">Pointers</text>
<text x="110" y="169" dx="0,0,-0.1,0.1,0,0,0,-0.2,0,-0.1,0,0.1,-0.1,0,-0.1,0,0,-0.1,0.1,-0.2,0,0,-0.1,-0.2,0,-0.1,-0.1,-0.1,0,0.1,-0.2,0.1,-0.1,-0.1,0.1,0,-0.1,0.1,0,-0.1,-0.2,0.1,0,-0.2,0,0,-0.1,0,0,0,-0.1,0,0,-0.2,0,-0.1,0,0,-0.1,0.1,0,-0.2,0,0,-0.1,0,-0.1,-0.2,-0.1,0,0,0,-0.1,0.1,0,-0.1,-0.2,0.1,0,0" class="s3_5">The first major design change made to the List class was to switch all pointers </text>
<text x="110" y="189" dx="0,0,-0.1,0,0.1,0,-0.1,0.1,0,-0.2,0.1,0,0,0,-0.1,0,0,-0.3,0.1,0.1,-0.1,-0.1,-0.1,0,0,0,0,0.1,-0.1,0,-0.1,-0.1,0.1,0,-0.1,0,-0.1,0,0,-0.1,0.1,0,-0.2,0.1,0,-0.2,0.1,-0.1,0,-0.1,0,-0.1,0.1,0.1,-0.1,-0.2,0.1,0,-0.2,0.1,0,-0.1,0.1,-0.1,-0.1,0.1,0,-0.1,0.1,-0.1,0.1,0,0,-0.1,0,0,-0.2,0.1,0,0.1" class="s3_5">(previously raw pointers) in the program to smart pointers. Since Node was also </text>
<text x="110" y="210" dx="0,0,-0.1,-0.1,-0.1,-0.1,0.1,-0.1,0,-0.1,0.1,0,-0.1,-0.1,0,0.1,0,-0.1,0,-0.1,-0.1,-0.1,-0.1,-0.1,0.1,0,0,-0.1,0.1,0,-0.1,-0.1,0.1,0,-0.1,-0.2,0.1,-0.2,0,0.1,-0.2,0,0,-0.1,0.1,-0.1,-0.1,0.1,0,0,-0.1,0,0.1,-0.1,-0.3,0.1,0,-0.1,-0.1,0.1,-0.2,0.1,-0.1,0,-0.1,0,0,0.1,-0.1,-0.2,0.1,0,-0.1,0.1,0,0,-0.2,0.1" class="s3_5">updated to have a pointer to the previous node, it made the most sense to use </text>
<text x="110" y="230" dx="0,0,-0.1,-0.1,0,0.1,-0.1,0,-0.1,0.1,0,-0.1,-0.2,0.1,0,0,0,-0.1,0,0,-0.2,-0.2,0.1,0.1,-0.1,0,-0.1,0,0.1,-0.1,0.1,-0.1,-0.1,0.1,0,0,-0.2,0.1,-0.1,0,0.1,0,-0.3,0.1,0.1,-0.1,-0.1,0.1,-0.2,0,0.1,0,-0.3,0.1,0.1,-0.1,-0.1,0.1,-0.1,0,0,-0.1,-0.1,0,0.1,-0.2,0.1,0,0.1,-0.1,0,-0.1,0,-0.1,0.1,-0.2,0,-0.1,0.1" class="s3_5">shared pointers to avoid multiple unique pointers, pointing at one object. The </text>
<text x="110" y="251" dx="0,0,-0.1,-0.1,-0.1,0,0.1,0,0,-0.1,0,-0.1,-0.2,0.1,0,0,0,0,-0.1,0,-0.1,0,-0.1,-0.1,0.1,0,-0.1,0.1,-0.1,0,0,-0.1,0.1,0,-0.1,0,0,-0.1,-0.1,0,-0.3,0.1,0,-0.2,-0.1,0.1,-0.1,0,0,-0.1,0,0,0,0,-0.2,0,0.1,0,0,0,-0.1,-0.1,-0.1,0,0,0,-0.3,-0.1,0,0.1,-0.2,-0.1" class="s3_5">change in the List protected field can be seen in figure 2 and 3 below. </text>
<text x="110" y="435" dx="0,0.1,0.1,0" class="s2_5">Size</text>
<text x="110" y="477" dx="0,0,-0.1,0.1,0,-0.2,0.1,0,-0.1,0,0.1,-0.1,0,-0.1,0,0,-0.1,0.1,-0.2,0,-0.2,-0.1,0,0,-0.1,-0.1,-0.1,0,0.1,-0.2,0.1,-0.1,-0.1,0.1,0,0,-0.1,0,0,-0.2,0.1,0,-0.1,-0.1,-0.1,0,-0.1,0,0,0,0,0.1,-0.2,0,-0.1,0,0,-0.1,-0.1,-0.1,0.1,0,-0.2,0.1,0,-0.1,-0.1,0.1,0,0,0,0,-0.1,-0.2,0,0,-0.1,0,-0.2,0.1,0" class="s3_5">The next major design change made was to add a size variable to the List classes </text>
<text x="110" y="497" dx="0,-0.1,0,0,0,-0.1,-0.1,-0.1,0.1,0,0,-0.1,0,-0.1,0.1,-0.1,-0.1,-0.2,0.1,0,0,0,0,-0.2,-0.1,-0.1,0,-0.1,0,0,-0.1,-0.1,0.1,0,0,0,0,-0.1,-0.2,0.1,-0.2,0.1,0,0,0,-0.1,-0.1,0.1,0.1,0,-0.1,-0.2,0.1,0,0,0,-0.2,0.1,-0.1,-0.1,0,-0.1,0.1,-0.1,-0.1,0.1,-0.1,-0.2,0,-0.1,0,0,0,-0.1,0,-0.1,0.1,-0.3,0.1,0,0,-0.1,0,-0.1,0.1,-0.1,-0.3,0.1" class="s3_5">private. Instead of scanning the list every time the size() method was called, instead, </text>
<text x="110" y="518" dx="0,-0.1,-0.1,0.1,0,0,0,-0.2,0.1,0,0,0,-0.1,-0.2,0,-0.1,-0.1,0,0.1,-0.2,0,-0.1,0,-0.2,0,0,0,-0.1,0,0,-0.1,0,-0.2,0.1,-0.1,0,0.1,-0.1,0,-0.1,0,0,0,-0.2,0.1,-0.1,-0.1,-0.1,0,-0.1,0,0.1,0.1,0,-0.1,-0.1,-0.2,0.1,-0.1,-0.1,0.1,0.1,-0.1,-0.1,0,0,-0.2,0,0,-0.1,-0.1,-0.1,0.1,-0.1,0,-0.1,0.1,0,-0.1,-0.1,0.1,0,-0.1,0,0,-0.1,0.1" class="s3_5">the size_ variable was just increased by 1 each time an element was added to the list. </text>
<text x="110" y="538" dx="0,0,-0.1,0.1,0,0,-0.1,0,-0.2,0.1,-0.1,-0.1,0.1,0,-0.1,-0.1,0.1,0,0,0,-0.1,-0.1,-0.1,0.1,0.1,0,0.1,0.1,-0.1,0,-0.1,-0.2,0.1,0,0,0,-0.2,0.1,-0.1,-0.1,0,-0.1,0.1,-0.1,-0.2,0.1,-0.1,0,-0.1,0,0,0,-0.1,0.1,-0.1,0,0,-0.1,0,0,0,-0.2,0,-0.2,0.1,0,0,-0.2,0,0.1,0,-0.2,0,0,0,0,0,0,-0.2,0,0.1,0,0" class="s3_5">This dramatically simplified the size() method as seen in figure 4 versus figure 5 </text>
<text x="110" y="559" dx="0,-0.1,0.1,0,-0.1,0" class="s3_5">below.</text>
<text x="110" y="834" dx="0,0,0.1,0.1,0.1,-0.1,-0.1,-0.1,0.1" class="s4_5">Figure 4:</text>
<text x="177" y="834" dx="0,0,0,0,-0.1,0,0,0,0,0.1,0.1,0,-0.1,-0.1,0.1,0.1,0.1,0.1,-0.2,-0.1,0,0,0,0.1,0,-0.1,-0.1,0,0,-0.1,0.1,-0.1,0,0,0,0.1,-0.1,0" class="s5_5">Original size() method before update. </text>
<text x="110" y="905" dx="0,0,0.1,0,-0.2,0.1,0,0.1,-0.2,-0.1" class="s2_5">Insertion </text>
<text x="110" y="959" dx="0,0,-0.1,0.1,-0.1,-0.1,0.1,0,-0.2,0.1,-0.1,0,-0.1,0,0,-0.1,0.1,-0.2,0,0,-0.2,0,0,-0.1,-0.1,-0.1,0,0.1,-0.2,0.1,-0.1,-0.1,0.1,0,-0.1,0.1,0,-0.1,-0.2,0.1,-0.2,0,0,0,-0.1,0,0,0,-0.1,0,0,-0.2,0,-0.1,0,0,-0.2,0.1,0,-0.2,0,-0.1,0,-0.2,0.1,-0.1,0,-0.1,-0.1,0.1,0,0,-0.1,-0.2,0.1,0,-0.1,-0.1,-0.1" class="s3_5">Another major design change made to the List class was relying on the insert() </text>
<text x="110" y="979" dx="0,0.1,0.1,-0.1,-0.2,0.1,-0.1,0,-0.1,0.1,0,-0.1,0.1,0,-0.1,-0.1,0.1,0,0.1,-0.1,-0.2,0.1,-0.2,-0.1,0.1,0.1,-0.1,0,-0.1,0.1,0,-0.1,-0.1,0.1,-0.2,0.1,0.1,0,-0.1,0.1,-0.2,0.1,-0.1,-0.1,-0.1,-0.1,0,-0.2,-0.1,-0.1,-0.1,-0.1,0,-0.1,-0.1,0,0.1,-0.1,0,0,0.1,0,0.1,-0.2,0.1,-0.1,0.1,0.1,-0.2,0,0.1,-0.1,0.1,0.1,-0.1,0,0,-0.2,0.1,0,-0.2,0.1,0.1,-0.1,0,-0.2,0.1,0" class="s3_5">method to do all insertion to the list. Rather than having multiple similar versions of </text>
<text x="110" y="1000" dx="0,0,-0.1,0,0.1,0,-0.1,0,-0.1,-0.1,-0.2,0.1,0,0,-0.1,-0.1,0,-0.1,0,-0.1,-0.1,-0.1,0,0,0,-0.1,0,0,0,0,-0.1,0,-0.1,0,0,-0.1,0,-0.2,0,0.1,-0.1,-0.1,-0.1,-0.1,0.1,-0.2,-0.1,0,0,-0.1,0,-0.1,-0.1,0,-0.1,-0.1,-0.1,0,-0.1,-0.1,-0.1,0,0.1,0.1,-0.2,0.1,0.1,-0.2,0,-0.1,0,0,-0.1,0,-0.2,0.1,0,0,-0.1" class="s3_5">insert throughout the Class in push_front(), push_back() and more, it was much </text>
<text x="110" y="1020" dx="0,0,0,0.1,-0.1,-0.1,0.1,0,0,-0.2,0.1,0,-0.1,-0.1,0,0.1,-0.2,0.1,-0.1,0.1,-0.1,0.1,-0.2,0,-0.1,0,0,0,0.1,-0.2,0.1,-0.1,-0.1,0,0,-0.1,0,0,0,-0.2,0.1,0,0,-0.1,-0.1,0.1,0,-0.1,-0.1,0,0.1,0,-0.1,0,0,0,-0.1,0.1,-0.1,0,0.1,-0.1,0.1,-0.2,0,-0.1,0,0,-0.2,-0.1,-0.1,-0.1,0,-0.1,0.1,0,0,-0.1,0.1,-0.1,0,0,-0.1" class="s3_5">simpler to have mildly different calls of the insert() method. This can be seen in </text>
<text x="110" y="1041" dx="0,0,0,0,0,-0.2,0.1,0,0,0,-0.1,-0.1,-0.1,0,-0.1,0,0.1,-0.1,0,-0.1,-0.1,0.1,0,-0.2,0.1,0.1,-0.1,0.1,0,0.1,-0.2,0,0,-0.1,-0.1,0,-0.1,0.1,0,0,-0.1,0.1,0,-0.1,-0.1,0.1,-0.2,0,0.1,-0.1,0.1,-0.2,0.1,-0.1,0,0,0.1,0,-0.2,0,0.1,0,0,-0.2,0,-0.1,0,0,-0.2,0.1,-0.1,0,-0.1,-0.1,0.1,-0.1,0,-0.1,0,0,-0.1,0,0,-0.1,-0.1,0" class="s3_5">figure 6 and 7 on the following page. All the code in figure 6 was replaced by mildly </text>
<text x="109" y="1061" dx="0,-0.1,0.1,0,0,0.1,-0.2,0.1,-0.1,-0.1,0,0,-0.1,0.1,0.1,0,0,-0.2,0.1,0,-0.1,-0.1,0.1,0,-0.2,0.1,0,0,0,-0.1,-0.2,0.1,0,-0.1,-0.1,-0.1,-0.2,0.1,0.1,-0.1,-0.1,0.1,-0.1,-0.2,0,-0.1,0,0,0,0,0,-0.2,0.1,0,0" class="s3_5">different calls to the new Insert() method in figure 7.</text>
<image preserveAspectRatio="none" x="110" y="585" width="513" height="218" xlink:href="5/img/1.png" />
<image preserveAspectRatio="none" x="635" y="585" width="184" height="80" xlink:href="5/img/2.png" />
<path fill-rule="evenodd" d="M635.2,671.7H819.1v48.8H635.2V671.7Z" class="g0_5" />
<text x="635" y="684" dx="0,0,0.1,0.1,0.1,-0.1,-0.1,-0.1,0.1" class="s4_5">Figure 5:</text>
<text x="701" y="684" dx="0,-0.1,0,0,0,-0.1,-0.1,0,0.1,0,0,0" class="s5_5">Updated and </text>
<text x="635" y="701" dx="0,0.1,0,0.1,0,0,0,-0.1,0,-0.1,0,0.1,0.1,0,-0.1,-0.1,0.1,0.1,-0.1,-0.1,0,0,0" class="s5_5">simplified size method.</text>
<image preserveAspectRatio="none" x="470" y="277" width="357" height="72" xlink:href="5/img/3.png" />
<image preserveAspectRatio="none" x="105" y="282" width="331" height="68" xlink:href="5/img/4.png" />
<path fill-rule="evenodd" d="M110,365.5H435v48.8H110V365.5Z" class="g0_5" />
<text x="110" y="378" dx="0,0,0.1,0.1,0.1,-0.1,-0.1,0,-0.1" class="s4_5">Figure 2:</text>
<text x="176" y="378" dx="0,0,0,0,-0.1,0,0,0,0,0.1,0,0,0,-0.1,-0.1,0,-0.1,0.1,0,0.1,-0.1,0,-0.1,0,0,0.1,0,0,0,-0.1,0,0,0,0,0,-0.1" class="s5_5">Original protected field containing </text>
<text x="110" y="395" dx="0,0,0,0,0.1,0,0,0,0,-0.1,-0.1,0,0.1,0" class="s5_5">raw pointers. </text>
<path fill-rule="evenodd" d="M471.7,361.3H825v48.8H471.7V361.3Z" class="g0_5" />
<text x="471" y="374" dx="0,0,0.1,0.1,0.1,-0.1,-0.1,0,-0.1" class="s4_5">Figure 3:</text>
<text x="537" y="374" dx="0,-0.1,0,0,0,-0.1,-0.1,0,0.1,0,0,0,-0.1,-0.1,0,0.1,-0.1,0,0.1,-0.1,0,-0.1,0,0,0.1,0,0,-0.1,0,0.1,0.1,0.1,0,0,-0.1" class="s5_5">Updated protected field with smart </text>
<text x="471" y="391" dx="0,0,0,0,0,-0.1,-0.1,0,0.1,0" class="s5_5">pointers. </text>


<!-- Any embedded fonts defined here -->
<style type="text/css" ><![CDATA[

@font-face {
	font-family: Montserrat-Bold_22;
	src: url("fonts/Montserrat-Bold_22.woff") format("woff");
}

@font-face {
	font-family: Calibri_9z;
	src: url("fonts/Calibri_9z.woff") format("woff");
}

@font-face {
	font-family: Montserrat-Regular_a1;
	src: url("fonts/Montserrat-Regular_a1.woff") format("woff");
}

]]></style>

</svg>
